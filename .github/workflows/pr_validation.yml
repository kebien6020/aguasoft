name: PR validation

on:
  pull_request:
    branches: [ "master" ]

jobs:
  build-client:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
    env:
      TZ: America/Bogota
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: cd client && npm ci && npm run build

  build-server:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
    env:
      TZ: America/Bogota
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: cd server && npm ci && npm run build

  check-client:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
    env:
      TZ: America/Bogota
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: cd client && npm ci && npm run typecheck && npm run lint

  check-server:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
    env:
      TZ: America/Bogota
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: cd server && npm ci && npm run typecheck && npm run lint

  test-server:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [23.x]
    env:
      TZ: America/Bogota
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - run: cd server && npm ci
    - run: cd server && npm run test:junit
    - run: cd server && npx junit-to-ctrf ./test-report.xml

    - name: Publish Test Report
      uses: ctrf-io/github-test-reporter@v1
      with:
        report-path: './server/ctrf/*.json'
      if: always()
  
  publish-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - image: aguasoft
          context: .
          target: server
        - image: nginx
          context: .
          target: client
        - image: certbot-dns-digitalocean
          context: docker/certbot
          target: ''
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/${{ github.actor }}/${{ matrix.image }}
        tags: |
          type=ref,event=pr
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and push Docker images
      uses: docker/build-push-action@v4
      with:
        context: ${{ matrix.context }}
        target: ${{ matrix.target }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
